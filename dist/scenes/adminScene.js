"use strict";
// import { Telegraf, Markup, Scenes  } from "telegraf";
// import { Repository } from "../Repository/repository";
// import { MyContext, SessionData } from "../utils/types";
// import { createManagerKeybord } from "../Repository/adminRepository";
// import { keyboards } from "../utils/keyboards";
// import { exitFunction } from "../utils/exitFunction";
// import { adminGetTotalScene } from "./adminGetTotalScene";
Object.defineProperty(exports, "__esModule", { value: true });
exports.adminScene = void 0;
// export const adminScene = new Scenes.WizardScene<MyContext>(
//     `adminScene`,
//     async (ctx) => { 
//         await ctx.reply(`–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: `, keyboards.adminActionsKeyboard
//     );
//     return ctx.wizard.next();
//     }, 
//     async (ctx) => {
//         if(!ctx.message || !('text' in ctx.message)) { 
//             await ctx.reply(`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ù–µ–æ–±—Ö–æ–¥–∏–º–∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑.`);
//             return;
//         }
//         if (await exitFunction(ctx, ctx.message.text)) return;
//         const action = ctx.message.text;
//         if (action === '–£–¥–∞–ª–∏—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞') { 
//             return ctx.scene.enter('adminDeleteManagerScene')
//         } else if (action === '–ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞') {
//             return ctx.scene.enter('adminGetTotalScene');
//         } else {
//             await ctx.reply(`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ.`);
//             return ctx.scene.reenter();
//         }
//     }
// )
const telegraf_1 = require("telegraf");
const keyboards_1 = require("../utils/keyboards");
const exitFunction_1 = require("../utils/exitFunction");
exports.adminScene = new telegraf_1.Scenes.WizardScene(`adminScene`, async (ctx) => {
    await ctx.reply(`–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: `, keyboards_1.keyboards.adminActionsKeyboard);
    return ctx.wizard.next();
}, async (ctx) => {
    if (!ctx.message || !('text' in ctx.message)) {
        await ctx.reply(`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ù–µ–æ–±—Ö–æ–¥–∏–º–∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑.`);
        return;
    }
    if (await (0, exitFunction_1.exitFunction)(ctx, ctx.message.text))
        return;
    const action = ctx.message.text;
    if (action === 'üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞') {
        return ctx.scene.enter('adminDeleteManagerScene');
    }
    else if (action === 'üìä –ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞') {
        return ctx.scene.enter('adminGetTotalScene');
    }
    else {
        await ctx.reply(`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ.`);
        return ctx.scene.reenter();
    }
});
